#include <iostream>
using namespace std;

bool isodd(int a){
    return (a & 1);
}

void isset(int a, int n){
    int z = 1;
    z = z<<n;
    if(z & a){
        cout<<n<<"th bit from right is set"<<endl;
    }
    else{
        cout<<n<<"th bit from not set"<<endl;
    }
}

int setbit(int a, int n){
    int z = 1;
    z = z<<n;
    a = a|z;
    cout<<a<<endl;
    return a;
}

int clearbit(int a, int n){
    int z = 1;
    z = ~(z<<n);
    a = a&z;
    cout<<a<<endl;
    return a;
}

int updatebit(int a, int n, int bit){
    int z = 1;
    z = ~(z<<n);
    int cleared_a = a&z;
    a = cleared_a|(bit<<n);
    cout<<a<<endl;
    return a;
}

int clearbitsfromright(int a, int n){
    int mask = (-1<<n);
    a = a&mask;
    cout<<a<<endl;
    return a;
}

int clearrangeitoj(int a, int i, int j){
    int mask = (~(~(-1<<(i-j+1))<<j));
    a = a&mask;
    cout<<a<<endl;
    return a;
}

int main() {
	// bitmasking
	int a = 5;
	int b = 7;
	int c = 50;
	
	if(isodd(a)){
	cout<<a<<" is an odd number"<<endl;
	}

    isset(a, 1);
    
    setbit(a, 3);
    
    clearbit(a, 3);
	 
	updatebit(a, 3, 1);
	
	clearbitsfromright(b, 2);
	
	clearrangeitoj(c, 4, 1);
	
	return 0;
}
