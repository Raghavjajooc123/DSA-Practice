#include <iostream>
using namespace std;

int  MaxSubarraysumcomutative(int arr[], int n){
    int comarr[n+1]={0};
    comarr[1]=arr[0];
    int maxsum=0;
    int left=0;
    int right=0;
    
    //creating commutative array
    for(int k=2;k<=n;k++){
        comarr[k]=comarr[k-1]+arr[k-1];
    }
    
    //printing the commutative array
    for(int a=0; a<=n; a++){
        cout<<comarr[a]<<" ";
    }
    
    for(int i=0; i<n; i++){
        for(int j=i;j<n;j++){
            int sum=0;
            
            sum = comarr[j+1]-comarr[i];
            
            //if sum>maxsum updating the maxsum
            if(sum>maxsum){
                maxsum=sum;
                left=i;
                right=j;
            }
        }
    }
    cout<<"The maximum sum of the subarray is "<<maxsum<<endl;
    cout<<"the array of maxsum is "<<endl;
    for(int i=left;i<=right;i++){
        cout<<arr[i]<<" ";
    }
}

int main() {
	// Maximum subarray sum by comulative sum
	int arr[100];
    int n, key;
    
    cout<<"Enter the number of elements in the array "<<endl;
    cin>>n;
    
    cout<<"enter the elements of the array "<<endl;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    
    int maxsum= MaxSubarraysumcomutative(arr, n);

    
	return 0;
}
